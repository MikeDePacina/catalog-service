name: commit stage
on: [push, workflow_dispatch]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mikedepacina/catalog-service
  VERSION: latest

jobs:
  build:
    name: build and test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repo 
        uses: actions/checkout@v3.5.3
      - name: Setup Java JDK
        uses: actions/setup-java@v3.14.1
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'gradle'
      - name: Code vulnerability scanning with Anchore Grype
        uses: anchore/scan-action@v3.6.4
        id: scan #identifier for subsequent steps to use (line 31)
        with:
          path: "${{ github.workspace }}"  # path to the checked-out repository                
          fail-build: false                                
          severity-cutoff: high # The minimum security category to be considered as an error (low, medium, high, critical)                            
      - name: upload vulnerability scanning report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure() # to still upload report even on failure
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests 
        run: | 
          chmod +x gradlew                                 
          ./gradlew build 
  

  package:
    name: package and publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.5.3
      - name: Setup Java JDK
        uses: actions/setup-java@v3.14.1
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'gradle'
      - name: build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
            --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: scan image for vulnerabilities using trivy
        uses: aquasecurity/trivy-action@0.32.0
        id: scan
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          format: 'sarif'
          limit-severities-for-sarif: true
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          output: 'trivy-results.sarif'
      - name: upload vulnerability scanning report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure() # to still upload report even on failure
        with:
          sarif_file: 'trivy-results.sarif'
      - name: log into container registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

        
        
